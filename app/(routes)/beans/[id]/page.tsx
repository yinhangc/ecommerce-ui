"use client";

import { useAppDispatch } from "@/redux/hooks";
import { addToCart } from "@/redux/slices/cart.slice";
import AddToCartBtn from "@/components/addToCartBtn";
import Carousel from "@/components/carousel";
import QtyBtn from "@/components/qtyBtn";
import RadioSelect, { RadioSelectProps } from "@/components/radioSelect";
import {
  faGauge,
  faLayerGroup,
  faLocationDot,
  faMountain,
  faStarOfDavid,
  faWind,
} from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { InformationCircleIcon, PencilIcon } from "@heroicons/react/24/outline";
import find from "lodash/find";
import { useParams } from "next/navigation";
import { Controller, SubmitHandler, useForm } from "react-hook-form";

const product = {
  id: "brazil-cerrado-natural",
  name: "Brazil Cerrado Natural Â∑¥Ë•øüáßüá∑ ÂñúÊãâÊúµÊó•Êõ¨",
  origin: "Cerrado, Brazil",
  elevation: "1000-1200m",
  flavourEn: "Dark chocolate, Creamy, Smoked, Nuts",
  flavourZh: "ÈªëÂ∑ßÂÖãÂäõ„ÄÅÂ•∂Ê≤π„ÄÅÁÖôÁáª„ÄÅÂ†ÖÊûú",
  roastLevel: "Medium Dark",
  acidity: "Light",
  process: "Natural",
  descriptionEn: `Brazilian Cerrado coffee is suitable for drip filtering and espresso brewing. It is highly beloved for its popular flavor profile, which includes the aroma of roasted walnuts and hazelnuts, complemented by a hint of caramel-like sweetness and rich chocolate flavors.

    This coffee is cultivated by thousands of small farmers in the Cerrado region of Brazil, located in the lush and diverse Cerrado belt, which is one of the largest coffee exporting regions globally. The area is renowned for its mix of grasslands, woodlands, and forests, as well as its fertile soil known as "Terra Roxa" (Red Earth) by the locals. The combination of high daytime temperatures and a dry environment makes the Cerrado region ideal for coffee cultivation at relatively low altitudes (around 1,100 meters) compared to other Central and South American coffee-growing regions.
    
    These unique qualities have granted the Cerrado region the first Protected Designation of Origin (PDO) status in Brazil, similar to the protection specifications for Iberian ham or champagne. This means that coffee labeled as "Cerrado" must originate from the Cerrado region. For customers who appreciate single-origin coffee, they not only enjoy its distinct flavor characteristics but also value the ethics, traceability, and highest quality that it represents. Brazilian Cerrado coffee is a unique brew that will soon become an essential choice.`,
  descriptionZh: `ÈÅ©ÂêàÊª¥ÊøæÂíåÊøÉÁ∏ÆÂíñÂï°ÁöÑÂ∑¥Ë•øÂñúÊãâÊúµÂíñÂï°ÔºåÂõ†ÂÖ∂ÂèóÊ≠°ËøéÁöÑÂë≥ÈÅìÁâπÈªûËÄåÂÇôÂèóÂñúÊÑõÔºåÂåÖÊã¨ÁÉ§Ê†∏Ê°ÉÂíåÊ¶õÂ≠êÁöÑÈ¶ôÊ∞£ÔºåÂÜçÂä†‰∏ä‰∏ÄÁµ≤ÁÑ¶Á≥ñËà¨ÁöÑÁîúÂë≥ÂíåÊøÉÈ¨±ÁöÑÂ∑ßÂÖãÂäõÈ¢®Âë≥„ÄÇ

    ÈÄôÁ®ÆÂíñÂï°Áî±Â∑¥Ë•øÂñúÊãâÊúµÂú∞ÂçÄÁöÑÊï∏ÂçÉÂêçÂ∞èËæ≤Á®ÆÊ§çÔºåË©≤Âú∞ÂçÄ‰ΩçÊñºËåÇÁõõÂ§öÊ®£ÁöÑÂñúÊãâÊúµÂú∞Â∏∂ÔºåÊòØÂÖ®ÁêÉÊúÄÂ§ßÁöÑÂíñÂï°Âá∫Âè£Âúã‰πã‰∏Ä„ÄÇÈÄôÂÄãÂú∞ÂçÄ‰ª•Â§ßËçâÂéü„ÄÅÊûóÂú∞ÂíåÊ£ÆÊûóÁöÑÊ∑∑Âêà‰ª•ÂèäÂúüÂ£§ËÇ•Ê≤ÉËÄåËÅûÂêçÔºåÁï∂Âú∞‰∫∫Á®±‰πãÁÇ∫‚ÄúTerra Roxa‚ÄùÔºàÁ¥ÖÂúüÔºâ„ÄÇÂä†‰∏äÈ´òÁôΩÂ§©Ê∫´Â∫¶Âíå‰πæÁá•ÁöÑÂú∞ÂçÄÁí∞Â¢ÉÔºåÈÄô‰∫õÁ®ÆÊ§çÊ¢ù‰ª∂‰ΩøÂæóÂñúÊãâÊúµÂú∞ÂçÄÁõ∏Â∞çÊñºÂÖ∂‰ªñ‰∏≠ÁæéÊ¥≤ÂíåÂçóÁæéÊ¥≤ÁöÑÂíñÂï°‰æÜË™™ÔºåÂú®ËºÉ‰ΩéÊµ∑ÊãîÔºàÁ¥Ñ1,100Á±≥ÔºâÁ®ÆÊ§çÂíñÂï°ÈùûÂ∏∏ÁêÜÊÉ≥„ÄÇ
    
    ÈÄô‰∫õÁç®ÁâπÁöÑÂìÅË≥™‰ΩøÂæóÂñúÊãâÊúµÊàêÁÇ∫Â∑¥Ë•øÈ¶ñÂÄãÁç≤ÂæóÂéüÁî¢Âú∞‰øùË≠∑Âú∞‰ΩçÁöÑÂú∞ÂçÄÔºåÈÄôÊÑèÂë≥ËëóÊ®ôÊúâ‚ÄúCerrado‚ÄùÊ®ôÁ±§ÁöÑÂíñÂï°ÂøÖÈ†à‰æÜËá™ÂñúÊãâÊúµÂú∞ÂçÄÔºàÈ°û‰ººÊñº‰øùË≠∑‰ºäÊØîÂà©‰∫ûÁÅ´ËÖøÊàñÈ¶ôÊ™≥ÁöÑË¶èÂÆöÔºâ „ÄÇÂ∞çÊñºÈÇ£‰∫õÊ¨£Ë≥ûÂñÆ‰∏ÄÁî¢Âú∞ÂíñÂï°ÁöÑÈ°ßÂÆ¢‰æÜË™™Ôºå‰ªñÂÄë‰∏çÂÉÖÊ¨£Ë≥ûÂÖ∂Áç®ÁâπÁöÑÈ¢®Âë≥ÁâπÈªûÔºåÈÇÑÊ¨£Ë≥ûÂÖ∂‰ª£Ë°®ÁöÑÂÄ´ÁêÜ„ÄÅÂèØËøΩÊ∫ØÂíåÊúÄÈ´òÂìÅË≥™ÁöÑÂíñÂï°„ÄÇÂ∑¥Ë•øÂñúÊãâÊúµÂíñÂï°ÊòØ‰∏ÄÊ¨æÁç®ÁâπÁöÑÂíñÂï°ÔºåÂæàÂø´Â∞±ÊúÉÊàêÁÇ∫ÂøÖÂÇôÁöÑÈÅ∏Êìá„ÄÇ`,
  priceList: [
    { size: "100g", price: 80 },
    { size: "200g", price: 130 },
  ],
  imagePath: "/beans/brazil-cerrado-natural.png",
};

const radioSelectProps: { [key: string]: RadioSelectProps } = {
  weight: {
    label: "ÈáçÈáè",
    groupId: "weight",
    options: [
      { label: "100g", value: "100g" },
      { label: "200g", value: "200g" },
    ],
  },
  grindLevel: {
    label: "Á†îÁ£®Â∫¶",
    groupId: "grindLevel",
    options: [
      { label: "ÂéüË±Ü", value: "whole-bean" },
      { label: "ÊøÉÁ∏ÆÂíñÂï°	", value: "espresso" },
      { label: "ÊâãÊ≤ñÂíñÂï°", value: "hand-drip" },
      { label: "ÊÑõÊ®ÇÂ£ì	", value: "aeropress" },
      { label: "Ëé´Âç°Â£∫", value: "moka-pot" },
      { label: "Ê≥ïÂºèÂ£ìÊøæÂ£∫", value: "french-press" },
    ],
  },
};

interface BeanFormInput {
  weight: string;
  grindLevel: string;
  quantity: number;
}

const BeanPage = () => {
  const { control, handleSubmit } = useForm<BeanFormInput>({
    defaultValues: {
      weight: "100g",
      grindLevel: "whole-bean",
      quantity: 1,
    },
  });
  const dispatch = useAppDispatch();
  const { id } = useParams<{ id: string }>();

  const onSubmit: SubmitHandler<BeanFormInput> = (data) => {
    const price = find(product.priceList, { size: data.weight })?.price;
    const weightLabel = find(radioSelectProps.weight.options, {
      value: data.weight,
    })?.label;
    const grindLevelLabel = find(radioSelectProps.grindLevel.options, {
      value: data.grindLevel,
    })?.label;
    if (!price || !weightLabel || !grindLevelLabel) return;
    const description = `${weightLabel}, ${grindLevelLabel}`;
    dispatch(
      addToCart({
        product: {
          id: product.id,
          name: product.name,
          price,
          imagePath: product.imagePath,
          description,
        },
        qty: data.quantity,
      }),
    );
  };

  return (
    <section className="mx-auto flex max-w-7xl justify-center gap-x-8 px-6 py-8">
      <div className="w-1/2">
        <Carousel imagePaths={["/beans/brazil-cerrado-natural.png"]} />
      </div>
      <div className="w-1/2">
        <h2 className="mb-8 text-3xl font-semibold">{product.name}</h2>
        <div className="mb-8 text-xl">HKD 100</div>
        <form onSubmit={(e) => e.preventDefault()} className="mb-8">
          <div className="mb-8 flex flex-col gap-4">
            <Controller
              control={control}
              name="weight"
              render={({ field: { value, onChange } }) => (
                <RadioSelect
                  {...radioSelectProps["weight"]}
                  value={value}
                  onChange={onChange}
                />
              )}
            />
            <Controller
              control={control}
              name="grindLevel"
              render={({ field: { value, onChange } }) => (
                <RadioSelect
                  {...radioSelectProps["grindLevel"]}
                  value={value}
                  onChange={onChange}
                />
              )}
            />
            <div>
              <h3 className="mb-1 font-medium">Êï∏Èáè:</h3>
              <Controller
                control={control}
                name="quantity"
                render={({ field: { value, onChange } }) => (
                  <QtyBtn value={value || 1} onChange={onChange} />
                )}
              />
            </div>
          </div>
          <AddToCartBtn handleSubmit={handleSubmit(onSubmit)} />
        </form>
        <h3 className="mb-3 flex items-center text-2xl font-semibold">
          <InformationCircleIcon className="mr-1 h-7 w-7" />
          Ë≥áË®ä
        </h3>
        <div className="mb-8 grid grid-cols-2 gap-y-3">
          <div className="flex items-center">
            <FontAwesomeIcon icon={faLocationDot} className="mr-3 h-5 w-5" />
            <div>
              <p className="text-lg font-medium">Áî¢Âú∞</p>
              <p>{product.origin}</p>
            </div>
          </div>
          <div className="flex items-center">
            <FontAwesomeIcon icon={faMountain} className="mr-3 h-5 w-5" />
            <div>
              <p className="text-lg font-medium">ÁîüÈï∑Êµ∑Êãî</p>
              <p>{product.elevation}</p>
            </div>
          </div>
          <div className="flex items-center">
            <FontAwesomeIcon icon={faStarOfDavid} className="mr-3 h-5 w-5" />
            <div>
              <p className="text-lg font-medium">È¢®Âë≥</p>
              <p>{product.flavourZh}</p>
            </div>
          </div>
          <div className="flex items-center">
            <FontAwesomeIcon icon={faGauge} className="mr-3 h-5 w-5" />
            <div>
              <p className="text-lg font-medium">ÈÖ∏Â∫¶</p>
              <p>{product.acidity}</p>
            </div>
          </div>
          <div className="flex items-center">
            <FontAwesomeIcon icon={faLayerGroup} className="mr-3 h-5 w-5" />
            <div>
              <p className="text-lg font-medium">ÁÉòÁÑôÂ∫¶</p>
              <p>{product.roastLevel}</p>
            </div>
          </div>
          <div className="flex items-center">
            <FontAwesomeIcon icon={faWind} className="mr-3 h-5 w-5" />
            <div>
              <p className="text-lg font-medium">ËôïÁêÜÊñπÊ≥ï</p>
              <p>{product.process}</p>
            </div>
          </div>
        </div>
        <h3 className="mb-3 flex items-center text-2xl font-semibold">
          <PencilIcon className="mr-1 h-7 w-7" />
          ÊèèËø∞
        </h3>
        <p className="leading-loose">{product.descriptionZh}</p>
      </div>
    </section>
  );
};

export default BeanPage;
